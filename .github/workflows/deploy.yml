name: CI/CD Pipeline for gallery

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

env:
  REGISTRY_IMAGE: vinacioo/gallery

jobs:
  build-revista:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun environment
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "latest"

      - name: Cache dependencies and build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            .astro
            dist
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/package.json') }}-${{ hashFiles('src/**') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/package.json') }}-
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}-
            ${{ runner.os }}-bun-

      - name: Install project dependencies
        run: bun install

      - name: Build project with retry
        env:
          MAX_ATTEMPTS: 3
          RETRY_INTERVAL: 30
        run: |
          attempt=1
          until bun run build || [ $attempt -eq $MAX_ATTEMPTS ]; do
            echo "Build attempt $attempt failed. Retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
            attempt=$((attempt + 1))
          done
          
          if [ $attempt -eq $MAX_ATTEMPTS ] && ! bun run build; then
            echo "Build failed after $MAX_ATTEMPTS attempts."
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          retention-days: 7

  deploy-to-deno:
    needs: build-revista
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Deploy to Deno
        uses: denoland/deployctl@v1
        with:
          project: "gallery"
          entrypoint: "https://deno.land/std@0.188.0/http/file_server.ts"
          root: "dist"
